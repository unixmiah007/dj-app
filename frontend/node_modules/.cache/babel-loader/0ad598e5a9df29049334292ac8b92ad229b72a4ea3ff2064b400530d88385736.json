{"ast":null,"code":"// backend/index.js\nimport express from \"express\";\nimport mysql from \"mysql2\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\ndotenv.config();\nconst app = express();\napp.use(cors());\napp.use(express.json());\nconst db = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n});\ndb.connect(err => {\n  if (err) {\n    console.error(\"DB connection failed:\", err);\n    process.exit(1);\n  }\n  console.log(\"MySQL connected.\");\n});\n\n// ✅ GET bookings\napp.get(\"/bookings\", (req, res) => {\n  db.query(\"SELECT * FROM bookings\", (err, results) => {\n    if (err) return res.status(500).send(err);\n    res.json(results);\n  });\n});\n\n// ✅ POST booking\napp.post(\"/bookings\", (req, res) => {\n  const {\n    name,\n    date\n  } = req.body;\n  db.query(\"INSERT INTO bookings (name, date) VALUES (?, ?)\", [name, date], err => {\n    if (err) return res.status(500).send(err);\n    res.sendStatus(201);\n  });\n});\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));","map":{"version":3,"names":["express","mysql","cors","dotenv","config","app","use","json","db","createConnection","host","process","env","DB_HOST","user","DB_USER","password","DB_PASSWORD","database","DB_NAME","connect","err","console","error","exit","log","get","req","res","query","results","status","send","post","name","date","body","sendStatus","PORT","listen"],"sources":["/home/unixmiah/dj-app/frontend/src/index.js"],"sourcesContent":["// backend/index.js\nimport express from \"express\";\nimport mysql from \"mysql2\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\nconst db = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n});\n\ndb.connect((err) => {\n  if (err) {\n    console.error(\"DB connection failed:\", err);\n    process.exit(1);\n  }\n  console.log(\"MySQL connected.\");\n});\n\n// ✅ GET bookings\napp.get(\"/bookings\", (req, res) => {\n  db.query(\"SELECT * FROM bookings\", (err, results) => {\n    if (err) return res.status(500).send(err);\n    res.json(results);\n  });\n});\n\n// ✅ POST booking\napp.post(\"/bookings\", (req, res) => {\n  const { name, date } = req.body;\n  db.query(\n    \"INSERT INTO bookings (name, date) VALUES (?, ?)\",\n    [name, date],\n    (err) => {\n      if (err) return res.status(500).send(err);\n      res.sendStatus(201);\n    }\n  );\n});\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));\n"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,KAAK,MAAM,QAAQ;AAC1B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,QAAQ;AAE3BA,MAAM,CAACC,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrBK,GAAG,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;AACfG,GAAG,CAACC,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;AAEvB,MAAMC,EAAE,GAAGP,KAAK,CAACQ,gBAAgB,CAAC;EAChCC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,OAAO;EACzBC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG,OAAO;EACzBC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK,WAAW;EACjCC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO;AACxB,CAAC,CAAC;AAEFX,EAAE,CAACY,OAAO,CAAEC,GAAG,IAAK;EAClB,IAAIA,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC3CV,OAAO,CAACa,IAAI,CAAC,CAAC,CAAC;EACjB;EACAF,OAAO,CAACG,GAAG,CAAC,kBAAkB,CAAC;AACjC,CAAC,CAAC;;AAEF;AACApB,GAAG,CAACqB,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjCpB,EAAE,CAACqB,KAAK,CAAC,wBAAwB,EAAE,CAACR,GAAG,EAAES,OAAO,KAAK;IACnD,IAAIT,GAAG,EAAE,OAAOO,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,GAAG,CAAC;IACzCO,GAAG,CAACrB,IAAI,CAACuB,OAAO,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAzB,GAAG,CAAC4B,IAAI,CAAC,WAAW,EAAE,CAACN,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAM;IAAEM,IAAI;IAAEC;EAAK,CAAC,GAAGR,GAAG,CAACS,IAAI;EAC/B5B,EAAE,CAACqB,KAAK,CACN,iDAAiD,EACjD,CAACK,IAAI,EAAEC,IAAI,CAAC,EACXd,GAAG,IAAK;IACP,IAAIA,GAAG,EAAE,OAAOO,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,GAAG,CAAC;IACzCO,GAAG,CAACS,UAAU,CAAC,GAAG,CAAC;EACrB,CACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAG3B,OAAO,CAACC,GAAG,CAAC0B,IAAI,IAAI,IAAI;AACrCjC,GAAG,CAACkC,MAAM,CAACD,IAAI,EAAE,MAAMhB,OAAO,CAACG,GAAG,CAAC,sCAAsCa,IAAI,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}