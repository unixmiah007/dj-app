{"ast":null,"code":"// backend/index.js\nimport express from\"express\";import mysql from\"mysql2\";import cors from\"cors\";import dotenv from\"dotenv\";dotenv.config();const app=express();app.use(cors());app.use(express.json());const db=mysql.createConnection({host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME});db.connect(err=>{if(err){console.error(\"DB connection failed:\",err);process.exit(1);}console.log(\"MySQL connected.\");});// ✅ GET bookings\napp.get(\"/bookings\",(req,res)=>{db.query(\"SELECT * FROM bookings\",(err,results)=>{if(err)return res.status(500).send(err);res.json(results);});});// ✅ POST booking\napp.post(\"/bookings\",(req,res)=>{const{name,date}=req.body;db.query(\"INSERT INTO bookings (name, date) VALUES (?, ?)\",[name,date],err=>{if(err)return res.status(500).send(err);res.sendStatus(201);});});const PORT=process.env.PORT||5000;app.listen(PORT,()=>console.log(`Server running on http://localhost:${PORT}`));","map":{"version":3,"names":["express","mysql","cors","dotenv","config","app","use","json","db","createConnection","host","process","env","DB_HOST","user","DB_USER","password","DB_PASSWORD","database","DB_NAME","connect","err","console","error","exit","log","get","req","res","query","results","status","send","post","name","date","body","sendStatus","PORT","listen"],"sources":["/home/unixmiah/dj-app/frontend/src/index.js"],"sourcesContent":["// backend/index.js\nimport express from \"express\";\nimport mysql from \"mysql2\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\nconst db = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n});\n\ndb.connect((err) => {\n  if (err) {\n    console.error(\"DB connection failed:\", err);\n    process.exit(1);\n  }\n  console.log(\"MySQL connected.\");\n});\n\n// ✅ GET bookings\napp.get(\"/bookings\", (req, res) => {\n  db.query(\"SELECT * FROM bookings\", (err, results) => {\n    if (err) return res.status(500).send(err);\n    res.json(results);\n  });\n});\n\n// ✅ POST booking\napp.post(\"/bookings\", (req, res) => {\n  const { name, date } = req.body;\n  db.query(\n    \"INSERT INTO bookings (name, date) VALUES (?, ?)\",\n    [name, date],\n    (err) => {\n      if (err) return res.status(500).send(err);\n      res.sendStatus(201);\n    }\n  );\n});\n\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAC7B,MAAO,CAAAC,KAAK,KAAM,QAAQ,CAC1B,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAE3BA,MAAM,CAACC,MAAM,CAAC,CAAC,CAEf,KAAM,CAAAC,GAAG,CAAGL,OAAO,CAAC,CAAC,CACrBK,GAAG,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC,CACfG,GAAG,CAACC,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC,CAEvB,KAAM,CAAAC,EAAE,CAAGP,KAAK,CAACQ,gBAAgB,CAAC,CAChCC,IAAI,CAAEC,OAAO,CAACC,GAAG,CAACC,OAAO,CACzBC,IAAI,CAAEH,OAAO,CAACC,GAAG,CAACG,OAAO,CACzBC,QAAQ,CAAEL,OAAO,CAACC,GAAG,CAACK,WAAW,CACjCC,QAAQ,CAAEP,OAAO,CAACC,GAAG,CAACO,OACxB,CAAC,CAAC,CAEFX,EAAE,CAACY,OAAO,CAAEC,GAAG,EAAK,CAClB,GAAIA,GAAG,CAAE,CACPC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC3CV,OAAO,CAACa,IAAI,CAAC,CAAC,CAAC,CACjB,CACAF,OAAO,CAACG,GAAG,CAAC,kBAAkB,CAAC,CACjC,CAAC,CAAC,CAEF;AACApB,GAAG,CAACqB,GAAG,CAAC,WAAW,CAAE,CAACC,GAAG,CAAEC,GAAG,GAAK,CACjCpB,EAAE,CAACqB,KAAK,CAAC,wBAAwB,CAAE,CAACR,GAAG,CAAES,OAAO,GAAK,CACnD,GAAIT,GAAG,CAAE,MAAO,CAAAO,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,GAAG,CAAC,CACzCO,GAAG,CAACrB,IAAI,CAACuB,OAAO,CAAC,CACnB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACAzB,GAAG,CAAC4B,IAAI,CAAC,WAAW,CAAE,CAACN,GAAG,CAAEC,GAAG,GAAK,CAClC,KAAM,CAAEM,IAAI,CAAEC,IAAK,CAAC,CAAGR,GAAG,CAACS,IAAI,CAC/B5B,EAAE,CAACqB,KAAK,CACN,iDAAiD,CACjD,CAACK,IAAI,CAAEC,IAAI,CAAC,CACXd,GAAG,EAAK,CACP,GAAIA,GAAG,CAAE,MAAO,CAAAO,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACX,GAAG,CAAC,CACzCO,GAAG,CAACS,UAAU,CAAC,GAAG,CAAC,CACrB,CACF,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAC,IAAI,CAAG3B,OAAO,CAACC,GAAG,CAAC0B,IAAI,EAAI,IAAI,CACrCjC,GAAG,CAACkC,MAAM,CAACD,IAAI,CAAE,IAAMhB,OAAO,CAACG,GAAG,CAAC,sCAAsCa,IAAI,EAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}